{"version":3,"sources":["components/Layout/navbar.js","components/Layout/sidebar.js","components/Layout/Layout.js","utils/api.js","components/home/children.js","components/home/home.js","components/user/login.js","components/user/info.js","components/updater/updater.js","components/Routes.js","components/App.js","serviceWorker.js","index.js"],"names":["Menubar","props","state","items","key","active","content","Menu","this","React","Component","Leftsidebar","vertical","Item","name","activeItem","onClick","handleItemClick","Input","icon","placeholder","Layout","e","setState","currentName","redirect","prevProps","prevState","snapshot","redirectUrl","to","split","className","minSize","defaultSize","children","ApiUtil","window","ipcRenderer","getApiData","connectKey","localStorage","getItem","secretKey","prepareApiData","params","apiData","apiParams","decodeApiResponse","data","status","console","error","getDateFromTimeStamp","epoch","timestamp","parseInt","Date","getFullStringFromTimeStamp","d","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","comma3Seperator","price","ordinary","floats","toFixedFloat","parseFloat","returnString","toString","replace","slice","fixed","toFixed","PriceBox","item","priceString","bids","Card","fluid","color","Math","floor","random","header","PriceBoxList","dict","resultList","elements","includes","push","Container","map","CurrentPrice","useState","setresultList","activeAccodion","setactiveAccodion","useEffect","on","event","result","updateOrderbook","Accordion","Title","index","Divider","horizontal","Header","as","Icon","Content","Group","HotCoinBox","realtimeDiff","curPrice","closing_price","diffRate24","fluctate_rate_24H","Statistic","widths","Value","text","Label","size","HotCoinBoxList","HotCoin","origin","waitsort","acc_trade_value_24H","sort","a","b","i","updateTicker","send","order_currency","payment_currency","now","setTime","interval","setInterval","clearInterval","Home","log","LoginForm","Form","onSubmit","handleSubmit","Field","label","labelPosition","value","onChange","handleChange","Button","type","Login","restoreValue","bind","handleFormChange","setItem","preventDefault","requestData","currentTarget","getAttribute","Description","responseData","userInfo","account_id","created","Table","definition","Body","Row","Cell","width","trade_fee","balance","Info","createdString","Updater","updateFinish","logoDataUrl","releaseName","percentage","description","err","Grid","Column","Progress","indicating","percent","progress","exact","path","component","App","Routes","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"mXAKMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,CAAC,CACNC,IAAK,UACLC,QAAQ,EACRC,QAAS,qFACR,CACDF,IAAK,OACLC,QAAQ,EACRC,QAAS,+CAVI,E,qDAgBjB,OACE,kBAACC,EAAA,EAAD,CAAMJ,MAASK,KAAKN,MAAMC,Y,GAlBVM,IAAMC,W,SCE5B,SAASC,EAAYV,GACnB,OACE,kBAACM,EAAA,EAAD,CAAMK,UAAQ,GACZ,kBAACL,EAAA,EAAKM,KAAN,CACEC,KAAK,OACLT,OAA6B,SAArBJ,EAAMc,WACdC,QAASf,EAAMgB,iBAHjB,QAOA,kBAACV,EAAA,EAAKM,KAAN,CACEC,KAAK,OACLT,OAA6B,SAArBJ,EAAMc,WACdC,QAASf,EAAMgB,iBAHjB,4BAQA,kBAACV,EAAA,EAAKM,KAAN,CACEC,KAAK,OACLT,OAA6B,SAArBJ,EAAMc,WACdC,QAASf,EAAMgB,iBAHjB,4BAQA,kBAACV,EAAA,EAAKM,KAAN,CACEC,KAAK,UACLT,OAA6B,YAArBJ,EAAMc,WACdC,QAASf,EAAMgB,iBAHjB,4BAOA,kBAACV,EAAA,EAAKM,KAAN,KACE,kBAACK,EAAA,EAAD,CAAOC,KAAK,SAASC,YAAY,qB,ICoB1BC,E,kDA/Cb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAqBRgB,gBAAkB,SAACK,EAAD,GAAkB,IAAZR,EAAW,EAAXA,KACtB,EAAKS,SAAS,CAAER,WAAYD,KArB5B,EAAKZ,MAAQ,CACXa,WAAYd,EAAMuB,YAClBC,SAAU,IAJK,E,+DAQAC,EAAWC,EAAWC,GACvC,GAAGpB,KAAKN,MAAMa,aAAeY,EAAUZ,YAAcP,KAAKN,MAAMa,aAAeP,KAAKP,MAAMuB,YAAa,CACrG,IAAIK,EAAc,GAEhBA,EAD2B,SAA1BrB,KAAKN,MAAMa,WACE,QAEA,IAEhBP,KAAKe,SAAS,CACZE,SAAUI,O,+BAUd,OAAGrB,KAAKN,MAAMuB,SAAiB,kBAAC,IAAD,CAAUK,GAAItB,KAAKN,MAAMuB,WAEtD,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAWM,MAAM,WAAWC,UAAU,iBAAiBC,QAAS,IAAKC,YAAa,KAChF,yBAAKF,UAAU,eACb,kBAACrB,EAAD,CACEI,WAAYP,KAAKN,MAAMa,WACvBE,gBAAiBT,KAAKS,mBAG1B,yBAAKe,UAAU,gBACZxB,KAAKP,MAAMkC,gB,GAxCH1B,IAAMC,W,sECuDZ0B,GAlEXC,OADFC,YAGa,CACbC,WAAY,WACV,IAAIC,EAAYC,aAAaC,QAAQ,cAChCC,EAAWF,aAAaC,QAAQ,aAIrC,MAAO,CACLF,WAJFA,EAAcA,GAAa,GAKzBG,UAJFA,EAAaA,GAAY,KAS3BC,eAAgB,SAAUC,GACxB,MAAO,CACLC,QAAStC,KAAK+B,aACdQ,UAAWF,IAKfG,kBAAoB,SAAUC,GAC5B,OAAIA,GAAiB,UAATA,EAIS,SAAhBA,EAAKC,QACNC,QAAQC,MAAM,kDACdD,QAAQC,MAAM,SAAWH,EAAKC,QACvB,MAEFD,EAAKA,KARL,MAYXI,qBAAsB,SAAUC,GAC9B,IAAIC,EAAYC,SAASF,GAEzB,OADQ,IAAIG,KAAKF,IAInBG,2BAA4B,SAAUJ,GACpC,IAAIK,EAAInD,KAAK6C,qBAAqBC,GAClC,MAAM,GAAN,OAAUK,EAAEC,cAAZ,YAA6BD,EAAEE,WAA/B,YAA6CF,EAAEG,SAA/C,YAA2DH,EAAEI,WAA7D,YAA2EJ,EAAEK,aAA7E,YAA6FL,EAAEM,eAIjGC,gBAAiB,SAAUC,GAAgB,IACrCC,EAAWZ,SAASW,GACpBE,EAAS7D,KAAK8D,aAAcC,WAAWJ,GAASC,EAAU,GAC1DI,EAAeJ,EAASK,WAAWC,QAAQ,wBAAyB,KAIxE,OAHGL,EAAS,IACVG,GAAY,UAAOH,EAAOI,WAAWE,MAAM,KAEtCH,GAITF,aAAc,SAASH,GAAgB,IAAVS,EAAS,uDAAH,EACjC,OAAOL,WAAWJ,GAAOU,QAAQD,MC1CnCtC,G,OACED,OADFC,aAGF,SAASwC,EAAS7E,GAChB,IAAMa,EAAOb,EAAM8E,KAAKjE,KAClBkE,EAAc5C,EAAQ8B,gBAAgBjE,EAAM8E,KAAK9B,KAAKgC,KAAK,GAAGd,OAEpE,OACE,kBAACe,EAAA,EAAD,CAAMC,OAAK,EAACnD,UAAU,WAAWoD,MAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAAI,OAAO,SAAUC,OAAM,UAAK1E,EAAL,qBAAsBkE,EAAtB,UAKvG,SAASS,EAAaxF,GACpB,IAAIyF,EAAOzF,EAAM0F,WACbC,EAAW,GACf,IAAK,IAAIxF,KAAOsF,EACR,CAAC,YAAa,oBAAoBG,SAASzF,IAC/CwF,EAASE,KACP,CACEhF,KAAMV,EACN6C,KAAMyC,EAAKtF,KAKnB,OACE,6BACE,kBAAC2F,EAAA,EAAD,KACGH,EAASI,KACR,SAACjB,GACC,OAAQ,kBAACD,EAAD,CAAU1E,IAAK2E,EAAKjE,KAAMiE,KAAMA,SAQpD,SAASkB,EAAahG,GAAQ,IAAD,EACSiG,mBAAS,IADlB,mBACpBP,EADoB,KACRQ,EADQ,OAEiBD,oBAAS,GAF1B,mBAEpBE,EAFoB,KAEJC,EAFI,KAkB3B,OAdAC,qBAAU,WACRhE,EAAYiE,GAAG,sBAAsB,SAACC,EAAOvD,GAC3C,IAAIwD,EAASrE,EAAQY,kBAAkBC,GACjCwD,GACJN,EAAcM,MAGlBC,MACC,IAOD,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,MAAX,CACEvG,OACE+F,EAEFS,MAAO,EACP7F,QAZR,SAAqBM,GACnB+E,GAAmBD,KAab,kBAACU,EAAA,EAAD,CAASC,YAAU,GACjB,kBAACC,EAAA,EAAD,CAAQC,GAAG,MACT,kBAACC,EAAA,EAAD,CAAMpG,KAAK,UAETsF,EAAiB,6DAAkB,sEAK3C,kBAACO,EAAA,EAAUQ,QAAX,CAAmB9G,OAAQ+F,GACzB,kBAAClB,EAAA,EAAKkC,MAAN,KAEE,kBAAC3B,EAAD,CAAcE,WAAYA,KAE5B,yBAAK3D,UAAU,iB,IAQnBqF,E,kDACJ,WAAYpH,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXoH,aAAc,EACdxG,KAAMb,EAAM8E,KAAKjE,KACjByG,SAAUtH,EAAM8E,KAAK9B,KAAKuE,cAC1BC,WAAYxH,EAAM8E,KAAK9B,KAAKyE,mBAPb,E,+DAWAhG,EAAWC,GACzBnB,KAAKP,MAAM8E,KAAK9B,KAAKuE,gBAAkB9F,EAAUqD,KAAK9B,KAAKuE,eAC5DhH,KAAKe,SAAS,CACZ+F,aAAclF,EAAQkC,aAAa5C,EAAUqD,KAAK9B,KAAKuE,cAAgBhH,KAAKP,MAAM8E,KAAK9B,KAAKuE,mB,+BAKhG,OACE,6BACE,yBAAKxF,UAAU,cACf,kBAAC2F,EAAA,EAAUP,MAAX,CAAiBQ,OAAO,QACtB,kBAACD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUE,MAAX,CAAiBC,MAAI,GAAEtH,KAAKN,MAAMY,MAClC,kBAAC6G,EAAA,EAAUI,MAAX,mBAEF,kBAACJ,EAAA,EAAD,CAAWK,KAAK,QACd,kBAACL,EAAA,EAAUE,MAAX,KACE,uBAAG7F,UAAU,YAAYI,EAAQ8B,gBAAgB1D,KAAKN,MAAMqH,YAE9D,kBAACI,EAAA,EAAUI,MAAX,kCAGF,kBAACJ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUE,MAAX,KACE,kBAACX,EAAA,EAAD,CACE9B,MACE5E,KAAKN,MAAMoH,aAAe,EACtB,OAC4B,IAA5B9G,KAAKN,MAAMoH,aACX,QACA,MAENxG,KACEN,KAAKN,MAAMoH,aAAe,EACtB,wBAC4B,IAA5B9G,KAAKN,MAAMoH,aACX,2BACA,4BAGPlF,EAAQ8B,gBAAgB1D,KAAKN,MAAMoH,eAEtC,kBAACK,EAAA,EAAUI,MAAX,wCAGF,kBAACJ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUE,MAAX,KACE,kBAACX,EAAA,EAAD,CACE9B,MACE5E,KAAKN,MAAMuH,WAAa,EACpB,OAC0B,IAA1BjH,KAAKN,MAAMuH,WACX,QACA,MAEN3G,KACEN,KAAKN,MAAMuH,WAAa,EACpB,wBAC0B,IAA1BjH,KAAKN,MAAMuH,WACX,2BACA,4BAGPrF,EAAQ8B,gBAAgB1D,KAAKN,MAAMuH,WAAY,GAjBlD,MAmBA,kBAACE,EAAA,EAAUI,MAAX,2C,GA9EatH,IAAMC,WAwF/B,SAASuH,EAAehI,GACtB,IAAI0F,EAAa1F,EAAM0F,WACvB,OAAIA,EAEF,6BACGA,EAAWK,KACV,SAACjB,GACC,OAAQ,kBAAC,EAAD,CAAY3E,IAAK2E,EAAKjE,KAAMiE,KAAMA,QAL1B,8BAY1B,SAASmD,EAAQjI,GAAQ,IAAD,EACciG,mBAAS,IADvB,mBACfP,EADe,KACHQ,EADG,KAiCtB,OA9BAG,qBAAU,WACRhE,EAAYiE,GAAG,mBAAmB,SAACC,EAAOvD,GACxC,IAAIkF,EAAS/F,EAAQY,kBAAkBC,GACnCwD,EAAS,GACT2B,EAAW,GACf,IAAK,IAAIhI,KAAO+H,EACdC,EAAStC,KAAK,CAAC1F,EAAK+H,EAAO/H,GAAKiI,sBAIlCD,EAASE,MAAK,SAAUC,EAAGC,GACzB,OAAOA,EAAE,GAAKD,EAAE,MAIlB,IAAK,IAAIE,EAAE,EAAEA,EAAE,GAAGA,IAChBhC,EAAOX,KAAK,CACVhF,KAAMsH,EAASK,GAAG,GAClBxF,KAAMkF,EAAOC,EAASK,GAAG,MAKtBhC,GACLN,EAAcM,MAGlBiC,MACC,IAGD,6BACE,kBAAC5B,EAAA,EAAD,CAASC,YAAU,GACjB,kBAACC,EAAA,EAAD,CAAQC,GAAG,MACT,kBAACC,EAAA,EAAD,CAAMpG,KAAK,cADb,4EAKA,kBAACmH,EAAD,CAAgBtC,WAAYA,KA+BpC,SAASe,IACPpE,EAAYqG,KAAK,oBAAqBvG,EAAQQ,eAAe,CAC3DgG,eAAgB,MAChBC,iBAAkB,SAItB,SAASH,IACPpG,EAAYqG,KAAK,iBAAkBvG,EAAQQ,eAAe,CACxDgG,eAAgB,MAChBC,iBAAkB,SAItB,SAAS1B,EAASlH,GAAQ,IAAD,EACCiG,mBAASzC,KAAKqF,OADf,mBACVC,GADU,WAevB,OAXAzC,qBAAU,WACR,IAAM0C,EAAWC,aAAY,WAC3BF,EAAQtF,KAAKqF,OACbJ,IACAhC,MACC,KACH,OAAO,WACLwC,cAAcF,MAEf,IAGD,6BACE,kBAAC/C,EAAD,MACA,kBAACiC,EAAD,OC/SkB7F,OAAhBC,Y,IA0BO6G,E,uKAvBH,IAAD,EAIH/G,EAAQG,aAFVC,EAFK,EAELA,WACAG,EAHK,EAGLA,UAEF,OAAIH,GAAeG,GAKjBQ,QAAQiG,IAAI,QAEV,kBAAC,EAAD,CAAQ5H,YAAY,QACpB,kBAACuE,EAAA,EAAD,KACE,kBAACoB,EAAD,UARJhE,QAAQiG,IAAI,oBACJ,kBAAC,IAAD,CAAUtH,GAAI,gB,GARTrB,IAAMC,W,0BCHjB4B,G,OAAgBD,OAAhBC,aAER,SAAS+G,EAAWpJ,GAElB,OACI,kBAAC8F,EAAA,EAAD,CAAW/D,UAAU,aACnB,kBAACsH,EAAA,EAAD,CAAMC,SAAUtJ,EAAMuJ,cACpB,kBAACF,EAAA,EAAKG,MAAN,KACE,kBAACvI,EAAA,EAAD,CACAwI,MAAO,CAAEvI,KAAM,YACfwI,cAAc,eACdvI,YAAY,aACZN,KAAK,aACL8I,MAAO3J,EAAMuC,WACbqH,SAAU5J,EAAM6J,gBAGlB,kBAACR,EAAA,EAAKG,MAAN,KACE,kBAACvI,EAAA,EAAD,CACEwI,MAAO,CAAEvI,KAAM,YACfwI,cAAc,eACdvI,YAAY,aACZN,KAAK,YACL8I,MAAO3J,EAAM0C,UACbkH,SAAU5J,EAAM6J,gBAGpB,kBAACC,EAAA,EAAD,CAAQC,KAAK,UAAb,Y,IA4FKC,E,kDApFb,WAAYhK,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXsC,WAAW,GACXG,UAAU,GACVlB,SAAU,IAGZ,EAAKyI,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKd,UAAYA,EAAUc,KAAV,gBACjB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKX,aAAe,EAAKA,aAAaW,KAAlB,gBAXH,E,gEAeE,IAAD,OAClB3J,KAAK0J,eACL5H,EAAYiE,GAAG,oBAAoB,SAACC,EAAOvD,GACzCE,QAAQiG,IAAInG,GACNb,EAAQY,kBAAkBC,KAC9B,EAAK1B,SACH,CAAEE,SAAU,UAEP,EAAKvB,MAAMsC,YAAaC,aAAa4H,QAAQ,aAAc,EAAKnK,MAAMsC,YACtE,EAAKtC,MAAMyC,WAAYF,aAAa4H,QAAQ,YAAa,EAAKnK,MAAMyC,iB,mCAOpE6D,GACXhG,KAAKe,SAAU,CACbiB,WAAaC,aAAaC,QAAQ,cAAqBD,aAAaC,QAAQ,cAA1B,GAClDC,UAAYF,aAAaC,QAAQ,aAAoBD,aAAaC,QAAQ,aAA1B,O,mCAIvC8D,GACXA,EAAM8D,iBACN,IAAIC,EAAc,CAChBzH,QAAS,CACPN,WAAWhC,KAAKN,MAAMsC,WACtBG,UAAUnC,KAAKN,MAAMyC,WAEvBI,UAAW,CACT6F,eAAgB,MAChBC,iBAAkB,QAGtBvG,EAAYqG,KAAK,kBAAmB4B,K,uCAGrB/D,GAEiC,eAA7CA,EAAMgE,cAAcC,aAAa,SAClCjK,KAAKe,SACH,CACEiB,WAAagE,EAAMgE,cAAcZ,QAIS,cAA7CpD,EAAMgE,cAAcC,aAAa,SAClCjK,KAAKe,SACH,CACEoB,UAAW6D,EAAMgE,cAAcZ,U,+BAOrC,OAAIpJ,KAAKN,MAAMuB,SACR,kBAAC,IAAD,CAAUK,GAAItB,KAAKN,MAAMuB,WAI9B,kBAACsE,EAAA,EAAD,KACE,kBAACsD,EAAD,CAAW7G,WAAYhC,KAAKN,MAAMsC,WAAYG,UAAWnC,KAAKN,MAAMyC,UAAWmH,aAActJ,KAAK4J,iBAAkBZ,aAAchJ,KAAKgJ,oB,GAhF3H/I,IAAMC,WCnClB4B,EAAgBD,OAAhBC,YAER,SAASoI,EAAazK,GACpB,IAAIgD,EAAOhD,EAAM0K,aACjB,OACE,6BACE,kBAAC7D,EAAA,EAAD,CAASC,YAAU,GACjB,kBAACC,EAAA,EAAD,CAAQC,GAAG,MACT,kBAACC,EAAA,EAAD,CAAMpG,KAAK,QADb,6BAMF,gEACYmC,EAAK2H,SAASC,YAE1B,gEACY5H,EAAK2H,SAASE,SAG1B,kBAAChE,EAAA,EAAD,CAASC,YAAU,GACjB,kBAACC,EAAA,EAAD,CAAQC,GAAG,MACT,kBAACC,EAAA,EAAD,CAAMpG,KAAK,cADb,6BAMF,kBAACiK,EAAA,EAAD,CAAOC,YAAU,GACf,kBAACD,EAAA,EAAME,KAAP,KACE,kBAACF,EAAA,EAAMG,IAAP,KACE,kBAACH,EAAA,EAAMI,KAAP,CAAYC,MAAO,GAAnB,4CACA,kBAACL,EAAA,EAAMI,KAAP,KAAalI,EAAK2H,SAAShC,iBAE7B,kBAACmC,EAAA,EAAMG,IAAP,KACE,kBAACH,EAAA,EAAMI,KAAP,iDACA,kBAACJ,EAAA,EAAMI,KAAP,KAAalI,EAAK2H,SAAS/B,mBAE7B,kBAACkC,EAAA,EAAMG,IAAP,KACE,kBAACH,EAAA,EAAMI,KAAP,8CACA,kBAACJ,EAAA,EAAMI,KAAP,KAAalI,EAAK2H,SAASS,YAE7B,kBAACN,EAAA,EAAMG,IAAP,KACE,kBAACH,EAAA,EAAMI,KAAP,+CACA,kBAACJ,EAAA,EAAMI,KAAP,KAAalI,EAAK2H,SAASU,a,IAmExBC,E,kDAzDb,WAAYtL,GAAQ,IAAD,sBACjB,cAAMA,GADW,MAGamC,EAAQG,aAAjCC,EAHY,EAGZA,WAAYG,EAHA,EAGAA,UAHA,OAIjB,EAAKzC,MAAQ,CACXsC,WAAYA,EACZG,UAAWA,EACXiI,SAAU,CACRE,QAAS,GACTD,WAAY,GACZjC,eAAgB,GAChBC,iBAAkB,GAClBwC,UAAW,GACXC,QAAU,KAbG,E,gEAkBE,IAAD,OAClBnI,QAAQiG,IAAI,yBACZ9G,EAAYiE,GAAG,oBAAoB,SAACC,EAAOvD,GACzC,GAAMA,GAAkB,UAATA,EAAkB,CAC/B,IAAIwD,EAASxD,EAAKA,KACduI,EAAgBpJ,EAAQsB,2BAA2B+C,EAAOqE,SAC9D,EAAKvJ,SAAS,CACZqJ,SAAU,CACRE,QAASU,EACTX,WAAYpE,EAAOoE,WACnBjC,eAAgBnC,EAAOmC,eACvBC,iBAAkBpC,EAAOoC,iBACzBwC,UAAW5E,EAAO4E,UAClBC,QAAS7E,EAAO6E,gBAIpBhJ,EAAYqG,KAAK,kBAAmBvG,EAAQQ,eAAe,CACzDgG,eAAgB,MAChBC,iBAAkB,YAIxBvG,EAAYqG,KAAK,kBAAmBvG,EAAQQ,eAAe,CACzDgG,eAAgB,MAChBC,iBAAkB,W,+BAIpB,OACE,kBAAC,EAAD,CAAQrH,YAAY,QACpB,kBAACuE,EAAA,EAAD,KACE,kBAAC2E,EAAD,CAAaC,aAAcnK,KAAKN,c,GApDrBO,IAAMC,W,kBC1DjB4B,EAAgBD,OAAhBC,YAyDOmJ,E,kDAtDb,WAAYxL,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXwL,cAAc,EACdC,YAAa,GACbC,YAAa,GACbC,WAAY,EACZC,YAAa,IARE,E,gEAYE,IAAD,OAClBxJ,EAAYqG,KAAK,yBAEjBrG,EAAYiE,GAAG,4BAA4B,SAACC,EAAOvD,GACjC,YAAhBA,EAAKC,OAAuB,EAAK3B,SAAS,CAAEoK,YAAa1I,EAAKA,OAAUE,QAAQiG,IAAInG,EAAK8I,QAG3FzJ,EAAYiE,GAAG,4BAA4B,SAACC,EAAOvD,GACjD,EAAK1B,SAAS,CACZsK,WAAY5I,OAGhBX,EAAYiE,GAAG,wBAAwB,SAACC,EAAOvD,GAC7C,EAAK1B,SAAS,CACZqK,YAAa3I,S,+BAYjB,OACE,kBAAC+I,EAAA,EAAD,KAEE,kBAACA,EAAA,EAAKd,IAAN,KACE,kBAACc,EAAA,EAAKC,OAAN,KACE,4BAA2C,MAAtC1H,WAAW/D,KAAKN,MAAM2L,YAAsB,kIAAgC,sCACjF,kBAACK,EAAA,EAAD,CAAUC,YAAU,EAACC,QAAS7H,WAAW/D,KAAKN,MAAM2L,YAAaQ,UAAQ,IACzE,yBAAKrK,UAAU,uCANrB,c,GAxCgBvB,IAAMC,WCGb,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO4L,OAAK,EAACC,KAAK,IAAIC,UAAWrD,IACjC,kBAAC,IAAD,CAAOoD,KAAK,SAASC,UAAWvC,IAChC,kBAAC,IAAD,CAAOsC,KAAK,QAAQC,UAAWjB,IAC/B,kBAAC,IAAD,CAAOgB,KAAK,UAAUC,UAAWf,MCKtBgB,I,8KAXX,OACE,yBAAKzK,UAAU,OACb,kBAAC0K,EAAD,W,GALUjM,IAAMC,YCOJiM,QACW,cAA7BtK,OAAOuK,SAASC,UAEe,UAA7BxK,OAAOuK,SAASC,UAEhBxK,OAAOuK,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEP,kBAAC,GAAD,MAEAC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArK,GACLD,QAAQC,MAAMA,EAAMsK,c","file":"static/js/main.6a1a08cd.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Menu\n} from \"semantic-ui-react\";\n\nclass Menubar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [{\n        key: 'contact',\n        active: true,\n        content: <b>기능 추가 / 문의 사항</b>\n      }, {\n        key: 'info',\n        active: false,\n        content: '개발 : shellcodesniper / KuuWangE'\n      }, ]\n    }\n  }\n\n  render () {\n    return (\n      <Menu items = {this.state.items}/>\n    );\n  }\n}\n\nexport {\n  Menubar\n}","import React from 'react'\nimport {\n  Menu,\n  Label,\n  Input\n} from \"semantic-ui-react\";\n\nfunction Leftsidebar(props) {\n  return (\n    <Menu vertical>\n      <Menu.Item\n        name=\"home\"\n        active={props.activeItem === \"home\"}\n        onClick={props.handleItemClick}\n      >\n        HOME\n      </Menu.Item>\n      <Menu.Item\n        name=\"info\"\n        active={props.activeItem === \"info\"}\n        onClick={props.handleItemClick}\n      >\n        회원정보\n      </Menu.Item>\n\n      <Menu.Item\n        name=\"spam\"\n        active={props.activeItem === \"spam\"}\n        onClick={props.handleItemClick}\n      >\n        자산관리\n      </Menu.Item>\n\n      <Menu.Item\n        name=\"updates\"\n        active={props.activeItem === \"updates\"}\n        onClick={props.handleItemClick}\n      >\n        잔고현황\n      </Menu.Item>\n      <Menu.Item>\n        <Input icon=\"search\" placeholder=\"Search mail...\" />\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport {\n  Leftsidebar\n}","import React from 'react'\nimport {\n  Container, Divider\n} from \"semantic-ui-react\";\nimport \"stylesheets/global.css\"\nimport SplitPane, { Pane } from \"react-split-pane\";\nimport {Menubar} from \"./navbar.js\";\nimport {Leftsidebar} from \"./sidebar.js\";\nimport {\n  Redirect\n} from \"react-router-dom\";\n\n\nclass Layout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeItem: props.currentName,\n      redirect: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if(this.state.activeItem !== prevState.activeItem && this.state.activeItem !== this.props.currentName) {\n      var redirectUrl = ''\n      if(this.state.activeItem === \"info\") \n        redirectUrl = '/info'\n      else \n        redirectUrl = '/'\n\n      this.setState({\n        redirect: redirectUrl\n      })\n    }\n  }\n\n  handleItemClick = (e, { name }) => {\n    this.setState({ activeItem: name });\n  }\n\n  render() {\n    if(this.state.redirect) return <Redirect to={this.state.redirect} />\n    return (\n      <div>\n        <Menubar />\n        <SplitPane split=\"vertical\" className=\"makeScrollable\" minSize={100} defaultSize={212}>\n          <div className=\"dividerLeft\">\n            <Leftsidebar\n              activeItem={this.state.activeItem}\n              handleItemClick={this.handleItemClick}\n            />\n          </div>\n          <div className=\"dividerRight\">\n            {this.props.children}\n          </div>\n        </SplitPane>\n      </div>\n    )\n  }\n}\n\nexport default Layout;","const {\n  ipcRenderer\n} = window;\n\nconst ApiUtil ={\n  getApiData: function () {\n    var connectKey= localStorage.getItem(\"connectKey\");\n    var  secretKey= localStorage.getItem(\"secretKey\");\n    connectKey = !connectKey ? \"\": connectKey\n    secretKey = !secretKey ? \"\" : secretKey\n\n    return {\n      connectKey:connectKey,\n      secretKey:secretKey\n    }\n  },\n  // ! api data 준비해줌, localStorage 에서 api key 를 받아온다.\n\n  prepareApiData: function (params) {\n    return {\n      apiData: this.getApiData(),\n      apiParams: params\n    }\n  },\n  // ! api 요청시에 데이터 준비용 유틸 함수, params 를 만들어줌\n\n  decodeApiResponse : function (data) {\n    if(!data || data === \"ERROR\") {\n      return null;\n    }\n    else {\n      if(data.status !== \"0000\") {\n        console.error(\"###### found Error in decodeApiResponse ######\")\n        console.error(\"CODE :\" + data.status)\n        return null;\n      }\n      return data.data\n    }\n  },\n  // ! ipcrender / ipcmain 을 통해 보내지는 결과값을 디코딩, 존재하지않거나 에러시 null 반환\n  getDateFromTimeStamp: function (epoch) {\n    var timestamp = parseInt(epoch);\n    var d = new Date(timestamp);\n    return d;\n  },\n  // ! epoch timestamp 를 data 로 만들어줌\n  getFullStringFromTimeStamp: function (epoch) {\n    var d = this.getDateFromTimeStamp(epoch);\n    return `${d.getFullYear()}-${d.getMonth()}-${d.getDay()} ${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}`\n  },\n  // ! epoch timestamp 를 data 로 만든 후 날짜 형식으로 반환\n\n  comma3Seperator: function (price,fixed=3) {\n    let ordinary = parseInt(price);\n    let floats = this.toFixedFloat((parseFloat(price) - ordinary),1);\n    let returnString = ordinary.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    if(floats > 0) {\n      returnString += `${floats.toString().slice(1)}`\n    }\n    return returnString\n  },\n  // ! 숫자를 3자리씩 잘라서 , 붙여줌\n\n  toFixedFloat: function(price,fixed=3) {\n    return parseFloat(price).toFixed(fixed);\n  }\n}\n\nexport default ApiUtil","import React, {\n  useState,\n  useEffect,\n  useRef\n} from 'react'\nimport {\n  Accordion,\n  Statistic,\n  Container,\n  Card,\n  Divider,\n  Header,\n  Icon,\n  Table,\n  Responsive\n} from \"semantic-ui-react\";\n\nimport ApiUtil from \"utils/api\"\n\nimport \"stylesheets/home.css\"\n\nconst {\n  ipcRenderer\n} = window;\n\nfunction PriceBox(props) {\n  const name = props.item.name;\n  const priceString = ApiUtil.comma3Seperator(props.item.data.bids[0].price);\n\n  return(\n    <Card fluid className=\"priceBox\" color={Math.floor(Math.random() * 3) > 1 ? \"blue\":\"orange\"} header={`${name}    ||    ${priceString} WON`} />\n  )\n  \n}\n\nfunction PriceBoxList(props) {\n  var dict = props.resultList;\n  var elements = [];\n  for (var key in dict) {\n    if (!([\"timestamp\", \"payment_currency\"].includes(key))){\n      elements.push(\n        {\n          name: key,\n          data: dict[key]\n        }\n      )\n    }\n  }\n  return(\n    <div>\n      <Container>\n        {elements.map(\n          (item) => {\n            return (<PriceBox key={item.name} item={item}/>)\n          }\n        )}\n      </Container>\n    </div>\n  )\n}\n\nfunction CurrentPrice(props) {\n  const [resultList, setresultList] = useState('');\n  const [activeAccodion, setactiveAccodion] = useState(false);\n  \n  useEffect(() => {\n    ipcRenderer.on(\"response_orderbook\", (event, data) => {\n      let result = ApiUtil.decodeApiResponse(data)\n      if(!(!result)) {\n        setresultList(result);\n      }\n    })\n    updateOrderbook();\n  }, []);\n\n  function handleClick(e) {\n    setactiveAccodion(!activeAccodion);\n  }\n\n  return(\n    <div>\n      <Accordion>\n        <Accordion.Title\n          active = {\n            activeAccodion\n          }\n          index={0}\n          onClick={handleClick}\n        >\n          <Divider horizontal>\n            <Header as='h4'>\n              <Icon name='money' />\n              {\n                activeAccodion ? \"현재가격 [눌러서 접기]\" : \"현재가격 [눌러서 펼치기]\"\n              }\n            </Header>\n          </Divider>\n        </Accordion.Title>\n        <Accordion.Content active={activeAccodion}>\n          <Card.Group>\n          \n            <PriceBoxList resultList={resultList}/>\n          </Card.Group> \n          <div className=\"seperator\" />\n        </Accordion.Content>\n      </Accordion>\n    </div>\n  );\n}\n\n\nclass HotCoinBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      realtimeDiff: 0,\n      name: props.item.name,\n      curPrice: props.item.data.closing_price,\n      diffRate24: props.item.data.fluctate_rate_24H\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if(this.props.item.data.closing_price !== prevProps.item.data.closing_price) {\n      this.setState({\n        realtimeDiff: ApiUtil.toFixedFloat(prevProps.item.data.closing_price - this.props.item.data.closing_price)\n      })\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"seperator\" />\n        <Statistic.Group widths=\"four\">\n          <Statistic>\n            <Statistic.Value text>{this.state.name}</Statistic.Value>\n            <Statistic.Label>Coin Name</Statistic.Label>\n          </Statistic>\n          <Statistic size=\"mini\">\n            <Statistic.Value>\n              <p className=\"tooLarge\">{ApiUtil.comma3Seperator(this.state.curPrice)}</p>\n            </Statistic.Value>\n            <Statistic.Label>현재가격</Statistic.Label>\n          </Statistic>\n\n          <Statistic>\n            <Statistic.Value>\n              <Icon\n                color={\n                  this.state.realtimeDiff > 0\n                    ? \"blue\"\n                    : this.state.realtimeDiff === 0\n                    ? \"green\"\n                    : \"red\"\n                }\n                name={\n                  this.state.realtimeDiff > 0\n                    ? \"hand point up outline\"\n                    : this.state.realtimeDiff === 0\n                    ? \"hand point right outline\"\n                    : \"hand point down outline\"\n                }\n              />\n              {ApiUtil.comma3Seperator(this.state.realtimeDiff)}\n            </Statistic.Value>\n            <Statistic.Label>실시간등락</Statistic.Label>\n          </Statistic>\n\n          <Statistic>\n            <Statistic.Value>\n              <Icon\n                color={\n                  this.state.diffRate24 > 0\n                    ? \"blue\"\n                    : this.state.diffRate24 === 0\n                    ? \"green\"\n                    : \"red\"\n                }\n                name={\n                  this.state.diffRate24 > 0\n                    ? \"hand point up outline\"\n                    : this.state.diffRate24 === 0\n                    ? \"hand point right outline\"\n                    : \"hand point down outline\"\n                }\n              />\n              {ApiUtil.comma3Seperator(this.state.diffRate24, 0)} %\n            </Statistic.Value>\n            <Statistic.Label>24시간 등락</Statistic.Label>\n          </Statistic>\n        </Statistic.Group>\n      </div>\n    );\n  }\n  \n\n  \n}\nfunction HotCoinBoxList(props) {\n  let resultList = props.resultList\n  if(!resultList) return (<div></div>)\n  return (\n    <div>\n      {resultList.map(\n        (item) => {\n          return (<HotCoinBox key={item.name} item={item}/>)\n        }\n      )} \n    </div>\n  )\n}\n\nfunction HotCoin(props) {\n  const [resultList, setresultList] = useState('');\n\n  useEffect(() => {\n    ipcRenderer.on(\"response_ticker\", (event, data) => {\n      let origin = ApiUtil.decodeApiResponse(data)\n      let result = [];\n      let waitsort = [];\n      for (var key in origin) {\n        waitsort.push([key, origin[key].acc_trade_value_24H])\n      }\n      // ! 제일 거래양이 많은 코인을 가져오기 위해 대기열에 추가\n\n      waitsort.sort(function (a, b) {\n        return b[1] - a[1];\n      });\n      // ! 정렬\n\n      for (let i=0;i<10;i++) {\n        result.push({\n          name: waitsort[i][0],\n          data: origin[waitsort[i][0]]\n        })\n      }\n      // ! 정렬된 데이터를 바탕으로 결과 배열에 추가\n\n      if (!(!result)) {\n        setresultList(result);\n      }\n    })\n    updateTicker();\n  }, []);\n\n  return(\n    <div>\n      <Divider horizontal>\n        <Header as='h4'>\n          <Icon name='attention' />\n            HOT 자산[거래금액 상위 10 가지]\n        </Header>\n      </Divider>\n        <HotCoinBoxList resultList={resultList}/>\n    </div>\n  )\n}\n\nfunction Detail(props) {\n  return(\n    <div>\n      <Divider horizontal>\n        <Header as='h4'>\n          <Icon name='bar chart' />\n          상세정보\n        </Header>\n      </Divider>\n\n      <Table definition>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={2}>주문 통화 (코인)</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>결제 통화 (마켓)</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n\nfunction updateOrderbook(){\n  ipcRenderer.send(\"request_orderbook\", ApiUtil.prepareApiData({\n    order_currency: 'ALL',\n    payment_currency: 'KRW'\n  }));\n}\n\nfunction updateTicker() {\n  ipcRenderer.send(\"request_ticker\", ApiUtil.prepareApiData({\n    order_currency: 'ALL',\n    payment_currency: 'KRW'\n  }));\n}\n\nfunction Content (props) {\n  const [time, setTime] = useState(Date.now());\n  // ! 주기적으로 새로고침 하기위해\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setTime(Date.now())\n      updateTicker();\n      updateOrderbook();\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n  \n  return (\n    <div>\n      <CurrentPrice />\n      <HotCoin/>\n    </div>\n  )\n  // <Detail/>\n  // ! 현재 삭제됨\n}\nexport {Content}","import React from 'react'\nimport {\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Table\n} from \"semantic-ui-react\";\nimport { Redirect } from \"react-router-dom\";\nimport Layout from 'components/Layout/Layout';\n\nimport { Content } from \"./children\"\nimport ApiUtil from \"utils/api\"\n\nconst { ipcRenderer } = window;\n\nclass Home extends React.Component {\n  render() {\n    var {\n      connectKey,\n      secretKey\n    } = ApiUtil.getApiData();\n    if(!connectKey || !secretKey) {\n      console.log(\"NOT LOGGED IN!!!\")\n      return (<Redirect to={\"/login\"} />)\n    }\n    else {\n      console.log(\"MAIN\")\n      return (\n        <Layout currentName=\"home\">\n        <Container>\n          <Content/>\n        </Container>\n        </Layout>\n      )\n    }\n  }\n}\n\n\nexport default Home;","import React from 'react';\n\nimport {\n  Container,\n  Button,\n  Input,\n  Form\n} from 'semantic-ui-react'\nimport { Redirect } from \"react-router-dom\";\n\nimport ApiUtil from \"utils/api\"\n\nimport 'stylesheets/login.css'\nconst { ipcRenderer } = window;\n\nfunction LoginForm (props) {\n\n  return (\n      <Container className=\"marginTop\">\n        <Form onSubmit={props.handleSubmit}>\n          <Form.Field>\n            <Input\n            label={{ icon: 'asterisk' }}\n            labelPosition='right corner'\n            placeholder='Access Key'\n            name=\"connectKey\"\n            value={props.connectKey}\n            onChange={props.handleChange}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Input\n              label={{ icon: 'asterisk' }}\n              labelPosition='right corner'\n              placeholder='Secret Key'\n              name=\"secretKey\"\n              value={props.secretKey}\n              onChange={props.handleChange}\n            />\n          </Form.Field>\n          <Button type='submit'>Submit</Button>\n        </Form>\n      </Container>\n  );\n}\n\nclass Login extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      connectKey:'',\n      secretKey:'',\n      redirect: ''\n    }\n\n    this.restoreValue = this.restoreValue.bind(this);\n    this.LoginForm = LoginForm.bind(this);\n    this.handleFormChange = this.handleFormChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n  }\n\n  componentDidMount() {\n    this.restoreValue();\n    ipcRenderer.on(\"response_account\", (event, data) => {\n      console.log(data);\n      if(!(!ApiUtil.decodeApiResponse(data))) {\n        this.setState(\n          { redirect: '/info' }\n        )\n        if (!(!this.state.connectKey)) localStorage.setItem(\"connectKey\", this.state.connectKey);\n        if (!(!this.state.secretKey)) localStorage.setItem(\"secretKey\", this.state.secretKey);\n      }\n    });\n\n\n  }\n\n  restoreValue(event) {\n    this.setState ({\n      connectKey: !localStorage.getItem(\"connectKey\") ? \"\" : localStorage.getItem(\"connectKey\"),\n      secretKey: !localStorage.getItem(\"secretKey\") ? \"\" : localStorage.getItem(\"secretKey\")\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let requestData = {\n      apiData: {\n        connectKey:this.state.connectKey,\n        secretKey:this.state.secretKey\n      },\n      apiParams: {\n        order_currency: \"BTC\",\n        payment_currency: \"KRW\"\n      }\n    }\n    ipcRenderer.send(\"request_account\", requestData);\n  }\n\n  handleFormChange(event) {\n    \n    if(event.currentTarget.getAttribute('name') === 'connectKey') {\n      this.setState(\n        {\n          connectKey : event.currentTarget.value\n        }\n      )\n    }\n    if(event.currentTarget.getAttribute('name') === 'secretKey') {\n      this.setState(\n        {\n          secretKey: event.currentTarget.value\n        }\n      )\n    }\n  }\n\n  render () {\n    if (this.state.redirect) {\n    return <Redirect to={this.state.redirect} />\n\n  }\n    return (\n      <Container>\n        <LoginForm connectKey={this.state.connectKey} secretKey={this.state.secretKey} handleChange={this.handleFormChange} handleSubmit={this.handleSubmit}/>\n      </Container>\n    );\n  }\n}\n\nexport default Login;","import React from 'react'\nimport Layout from 'components/Layout/Layout';\nimport {\n  Container,\n  Divider,\n  Header,\n  Icon,\n  Table\n} from \"semantic-ui-react\";\n\nimport ApiUtil from \"utils/api\"\nconst { ipcRenderer } = window;\n\nfunction Description (props) {\n  var data = props.responseData;\n  return (\n    <div>\n      <Divider horizontal>\n        <Header as='h4'>\n          <Icon name='tag' />\n          회원정보\n        </Header>\n      </Divider>\n\n      <p>\n        회원 아이디 : {data.userInfo.account_id}\n      </p>\n      <p>\n        회원 가입일 : {data.userInfo.created}\n      </p>\n\n      <Divider horizontal>\n        <Header as='h4'>\n          <Icon name='bar chart' />\n          상세정보\n        </Header>\n      </Divider>\n      \n      <Table definition>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={2}>주문 통화 (코인)</Table.Cell>\n            <Table.Cell>{data.userInfo.order_currency}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>결제 통화 (마켓)</Table.Cell>\n            <Table.Cell>{data.userInfo.payment_currency}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>거래 수수료율</Table.Cell>\n            <Table.Cell>{data.userInfo.trade_fee}</Table.Cell>\n          </Table.Row>\n          <Table.Row>\n            <Table.Cell>주문 가능 수량</Table.Cell>\n            <Table.Cell>{data.userInfo.balance}</Table.Cell>\n          </Table.Row>\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n\nclass Info extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    var {connectKey, secretKey} = ApiUtil.getApiData();\n    this.state = {\n      connectKey: connectKey,\n      secretKey: secretKey,\n      userInfo: {\n        created: \"\",\n        account_id: \"\",\n        order_currency: \"\",\n        payment_currency: \"\",\n        trade_fee: \"\",\n        balance : \"\"\n      }\n    }\n\n  }\n  componentDidMount() {\n    console.log(\"### DEBUG IN INFO ###\")\n    ipcRenderer.on(\"response_account\", (event, data) => {\n      if(!(!data) && data !== \"ERROR\") {\n        let result = data.data;\n        var createdString = ApiUtil.getFullStringFromTimeStamp(result.created)\n        this.setState({\n          userInfo: {\n            created: createdString,\n            account_id: result.account_id,\n            order_currency: result.order_currency,\n            payment_currency: result.payment_currency,\n            trade_fee: result.trade_fee,\n            balance: result.balance\n          }\n        })\n      } else {\n        ipcRenderer.send(\"request_account\", ApiUtil.prepareApiData({\n          order_currency: 'BTC',\n          payment_currency: 'KRW'\n        }));\n      }\n    });\n    ipcRenderer.send(\"request_account\", ApiUtil.prepareApiData({\n      order_currency: 'BTC',\n      payment_currency: 'KRW'\n    }));\n  }\n  render () {\n    return (\n      <Layout currentName=\"info\">\n      <Container>\n        <Description responseData={this.state}/>\n      </Container>\n      </Layout>\n    )\n  }\n}\n\nexport default Info;","import React from 'react';\n\nimport { Grid, Progress } from \"semantic-ui-react\";\n\nconst { ipcRenderer } = window;\n\nclass Updater extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      updateFinish: false,\n      logoDataUrl: '',\n      releaseName: '',\n      percentage: 0,\n      description: ''\n    }\n  }\n\n  componentDidMount() {\n    ipcRenderer.send(\"register_updateWindow\");\n\n    ipcRenderer.on(\"response_svg_to_data_url\", (event, data) => {\n      data.status === \"success\" ? this.setState({ logoDataUrl: data.data }) : console.log(data.err)\n    })\n    \n    ipcRenderer.on(\"updateProgressPercentage\", (event, data) => {\n      this.setState({\n        percentage: data\n      })\n    });\n    ipcRenderer.on(\"updateReleaseVersion\", (event, data) => {\n      this.setState({\n        releaseName: data\n      })\n    })\n    // ipcRenderer.on(\"updateDescription\", (event, data) => {\n    //   this.setState({\n    //     description: data\n    //   })\n    // })\n  }\n\n  render() {\n    // const isScrapping = this.state.scrapMode;\n    return (\n      <Grid>\n        {/* <h1>{this.state.percentage}</h1> */}\n        <Grid.Row>\n          <Grid.Column>\n            <h3>{parseFloat(this.state.percentage) === 100 ? \"업데이트 완료! 확인 버튼을 눌러 창을 닫아주세요\" : \"업데이트 중...\"}</h3>\n            <Progress indicating percent={parseFloat(this.state.percentage)} progress />\n            <div className=\"col-2 mx-0 px-0 float-right mt-3\">\n            </div>\n          </Grid.Column>\n        </Grid.Row>ㅇ\n      </Grid>\n    );\n  };\n}\n\nexport default Updater;","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n// BrowserRouter 사용시에 패키징 후 빈화면만 나오는 이슈 확인하여 변경함\nimport Home from \"components/home/home\";\nimport Login from \"components/user/login\";\nimport Info from \"components/user/info\";\nimport Updater from \"components/updater/updater.js\";\n// App.js에 있던 Aladin, LionKing, SpiderMan을\n// Components/Routes.js 로 이동\nexport default () => (\n  <Router>\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/login\" component={Login} />\n    <Route path=\"/info\" component={Info} />\n    <Route path=\"/update\" component={Updater} />\n  </Router>\n);","import React from 'react';\nimport 'stylesheets/App.css';\nimport Routes from \"./Routes\"\nimport 'semantic-ui-css/semantic.min.css'\n\nclass App extends React.Component {\n  render() {\n    // 로그인 여부 확인 후 Home / Login 페이지로 넘겨주기\n    return (\n      <div className=\"App\">\n        <Routes />\n      </div>\n    );\n    \n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'stylesheets/global.css';\nimport App from 'components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}